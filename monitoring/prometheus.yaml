---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: monitoring
  annotations:
    fluxcd.io/ignore: false
    fluxcd.io/automated: "true"
    fluxcd.io/tag.grafana: semver:~6
spec:
  releaseName: prometheus-operator
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 8.9.2
  values:
    prometheusOperator:
      createCustomResources: true
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-client
              resources:
                requests:
                  storage: 1Gi
      ingress:
        enabled: true
        hosts: [alertmanager.apps.dmacneil.co.uk]
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: letsencrypt-prod
    grafana:
      image:
        repository: grafana/grafana
        tag: 6.6.2
      deploymentStrategy:
        type: Recreate
      persistence:
        enabled: true
        storageClassName: "nfs-client"
        accessModes:
        - ReadWriteOnce
        size: 1Gi
      env:
        GF_EXPLORE_ENABLED: true
        GF_RENDERING_SERVER_URL: http://grafana-image-renderer:8081/render
        GF_RENDERING_CALLBACK_URL: http://prometheus-operator-grafana/
        GF_LOG_FILTERS: rendering:debug
      ingress:
        hosts: [grafana.apps.dmacneil.co.uk]
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: letsencrypt-prod
      grafana.ini:
        server:
          root_url: https://grafana.apps.dmacneil.co.uk
        auth.generic_oauth:
          enabled: false
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
      sidecar:
        dashboards:
          enabled: true
    coreDns:
      enabled: true
    kubeDns:
      enabled: false
    kubeEtcd:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        hosts: [prometheus.apps.dmacneil.co.uk]
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: letsencrypt-prod
      prometheusSpec:
        image:
          repository: quay.io/prometheus/prometheus
          tag: v2.9.1
        retention: 7d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-client
              resources:
                requests:
                  storage: 5Gi
        externalLabels:
          cluster: k3s
        additionalScrapeConfigs: []
      additionalServiceMonitors:
      - name: fluxmetrics
        endpoints:
        - interval: 30s
          path: /metrics
          port: http
        namespaceSelector:
          any: true
        selector:
          matchLabels:
            app: flux
