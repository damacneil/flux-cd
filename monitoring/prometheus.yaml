---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: monitoring
  annotations:
    fluxcd.io/ignore: false
    fluxcd.io/automated: "true"
    fluxcd.io/tag.grafana: semver:~6
spec:
  releaseName: prometheus-operator
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 8.9.2
  values:
    server:
      resources:
        requests:
          memory: 1000Mi
          cpu: 25m
        limits:
          memory: 2000Mi
    prometheusOperator:
      createCustomResources: true
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-client
              resources:
                requests:
                  storage: 2Gi
      ingress:
        enabled: true
        hosts: [alertmanager.apps.dmacneil.co.uk]
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: letsencrypt-prod
    grafana:
      image:
        repository: grafana/grafana
        tag: 6.6.2
      deploymentStrategy:
        type: Recreate
      persistence:
        enabled: true
        storageClassName: "nfs-client"
        accessModes:
        - ReadWriteOnce
        size: 2Gi
      env:
        GF_EXPLORE_ENABLED: true
        GF_RENDERING_SERVER_URL: http://grafana-image-renderer:8081/render
        GF_RENDERING_CALLBACK_URL: http://prometheus-operator-grafana/
        GF_LOG_FILTERS: rendering:debug
      ingress:
        hosts: [grafana.apps.dmacneil.co.uk]
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: letsencrypt-prod
      grafana.ini:
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
    coreDns:
      enabled: true
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeEtcd:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        hosts: [prometheus.apps.dmacneil.co.uk]
        tls:
          - hosts:
            - prometheus.apps.dmacneil.co.uk
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: letsencrypt-prod
      prometheusSpec:
#        image:
#          repository: quay.io/prometheus/prometheus
#          tag: v2.9.1
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        serviceMonitorSelectorNilUsesHelmValues: false
        retention: 7d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-client
              resources:
                requests:
                  storage: 10Gi
        additionalScrapeConfigs: 
        - job_name: 'netdata-scrape'
          metrics_path: '/api/v1/allmetrics'
          params:
              # format: prometheus | prometheus_all_hosts
              # You can use `prometheus_all_hosts` if you want Prometheus to set the `instance` to your hostname instead of IP
            format: [prometheus]
          honor_labels: true
          static_configs:
          - targets:
            - k3s-node-01.home.int:19999
            - k3s-node-02.home.int:19999
            - k3s-node-03.home.int:19999
#      additionalServiceMonitors:
#      - name: fluxmetrics
#        endpoints:
#        - interval: 30s
#          path: /metrics
#          port: http
#        namespaceSelector:
#          any: true
#        selector:
#          matchLabels:
#            app: flux
